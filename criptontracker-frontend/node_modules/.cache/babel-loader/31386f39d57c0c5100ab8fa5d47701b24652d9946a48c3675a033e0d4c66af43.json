{"ast":null,"code":"// src/fluxo.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3000/'; // Cambia esta URL según sea necesario\n\nexport const fetchCryptoData = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/crypto`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crypto data:', error);\n    throw error;\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchCryptoData","response","get","data","error","console","registerUser","userData","post"],"sources":["/Users/eiahrjay/Desktop/CryptoVision/criptontracker-frontend/src/fluxo.js"],"sourcesContent":["// src/fluxo.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/';  // Cambia esta URL según sea necesario\n\nexport const fetchCryptoData = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/crypto`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching crypto data:', error);\n    throw error;\n  }\n};\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,wBAAwB,CAAC,CAAE;;AAE3C,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAAS,CAAC;IACrD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,WAAW,EAAEQ,QAAQ,CAAC;IAClE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}